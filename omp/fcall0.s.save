	.file	"fcall0.c"
	.text
	.p2align 4,,15
.globl fun0
	.type	fun0, @function
fun0:
.LFB13:
	pushq	%rbp
.LCFI0:
	movabsq	$-8000000016, %rax
	movq	%rsp, %rbp
.LCFI1:
	subq	$32, %rsp
.LCFI2:
	addq	%rax, %rsp
	xorl	%eax, %eax
	leaq	39(%rsp), %rdi
	andq	$-16, %rdi
	.p2align 4,,7
.L2:
	movq	%rax, (%rdi,%rax,8)
	addq	$1, %rax
	cmpq	$1000000000, %rax
	jne	.L2
	movl	$5, %r9d
	movl	$4, %r8d
	movl	$3, %ecx
	movl	$2, %edx
	movl	$1, %esi
	movq	$7, 8(%rsp)
	movq	$6, (%rsp)
	call	fun1
	leave
	ret
.LFE13:
	.size	fun0, .-fun0
	.section	.rodata.str1.1,"aMS",@progbits,1
.LC0:
	.string	"ans = %d \n"
	.text
	.p2align 4,,15
.globl main
	.type	main, @function
main:
.LFB14:
	subq	$8, %rsp
.LCFI3:
	xorl	%eax, %eax
	call	fun0
	movl	$.LC0, %edi
	movq	%rax, %rsi
	addq	$8, %rsp
	xorl	%eax, %eax
	jmp	printf
.LFE14:
	.size	main, .-main
	.section	.eh_frame,"a",@progbits
.Lframe1:
	.long	.LECIE1-.LSCIE1
.LSCIE1:
	.long	0x0
	.byte	0x1
	.string	"zR"
	.uleb128 0x1
	.sleb128 -8
	.byte	0x10
	.uleb128 0x1
	.byte	0x3
	.byte	0xc
	.uleb128 0x7
	.uleb128 0x8
	.byte	0x90
	.uleb128 0x1
	.align 8
.LECIE1:
.LSFDE1:
	.long	.LEFDE1-.LASFDE1
.LASFDE1:
	.long	.LASFDE1-.Lframe1
	.long	.LFB13
	.long	.LFE13-.LFB13
	.uleb128 0x0
	.byte	0x4
	.long	.LCFI0-.LFB13
	.byte	0xe
	.uleb128 0x10
	.byte	0x86
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x6
	.align 8
.LEFDE1:
.LSFDE3:
	.long	.LEFDE3-.LASFDE3
.LASFDE3:
	.long	.LASFDE3-.Lframe1
	.long	.LFB14
	.long	.LFE14-.LFB14
	.uleb128 0x0
	.byte	0x4
	.long	.LCFI3-.LFB14
	.byte	0xe
	.uleb128 0x10
	.align 8
.LEFDE3:
	.ident	"GCC: (GNU) 4.1.2 20080704 (Red Hat 4.1.2-48)"
	.section	.note.GNU-stack,"",@progbits
