#! /usr/bin/env python
from __future__ import print_function
from __future__ import absolute_import
import os, sys

def find_root():
    dir = os.path.abspath('.')
    assert dir[0] == '/'
    relpath = str()
    
    while dir.find('/',1) != -1: #check there is a / after dir[0]
        (dir, tmp) = os.path.split(dir)
        relpath = tmp+'/'+relpath
        if os.path.isfile(dir+'/root.mk'):
            root = dir
            relpath = relpath[:-1] #remove trailing /
            return (root, relpath)
    
    print('zmake cannot find root.mk')
    print('zmake must be run in subdir of root (but not at root)')
    sys.exit(-1)

def copy_rules(root, relpath): #copy rules.mk from root
    fi = open(root+'/rules.mk')
    
    if os.path.isfile('rules.mk'):
        ans = raw_input('Move existing rules.mk? Say yes or no: ')
        if(ans != 'yes'):
            sys.exit(-1)
        else:
            fname = 'rules.mk.mk'
            while os.path.isfile(fname):
                fname = fname + '.mk'
            os.system('mv rules.mk ' + fname)

    
    fo = open('rules.mk', 'w')
    for l in fi:
        if l[:-1].find('d := $(r)') != -1:
            l = l[:-1] + '/' + relpath + '\n'
            print(l[:-1])
        fo.write(l)
        
    fi.close()
    fo.close()
    print('copied rules.mk from root\n')

def copy_make(root, relpath): #copy makefile from root
    fi = open(root+'/Makefile')
    
    if os.path.isfile('Makefile'):
        ans = raw_input('Move existing Makefile? Say yes or no: ')
        if(ans != 'yes'):
            sys.exit(-1)
        else:
            fname = 'Makefile.mk'
            while os.path.isfile(fname):
                fname = fname + '.mk'
            os.system('mv Makefile ' + fname)
    
    fo = open('Makefile', 'w')
    for l in fi:
        if l[:-1].find('include root.mk') != -1:
            lvls = relpath.count('/') + 1 #number of levels to go up to root.mk
            l = str()
            for i in range(lvls):
                l = l + '../'
            l = 'include '+ l + 'root.mk' + '\n'
            print(l[:-1])
        elif l[:-1].find('d := $(r)') != -1:
            l = 'd := $(r)/' + relpath + '\n'
            print(l[:-1])
        fo.write(l)

    fi.close()
    fo.close()
    print('copied Makefile from root')

if __name__ == '__main__':
    (root, relpath) = find_root()
    print('ROOT = ', root, '\nrel path = ', relpath,'\n')
    copy_rules(root, relpath)
    copy_make(root, relpath)
